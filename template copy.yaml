# file: serverless.yml

service: customers-api

frameworkVersion: ">=1.3.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}

  environment:
    CUSTOMERS_TABLE: ${self:service}-${self:provider.stage}-${self:custom.customersTable}

  iamRoleStatements:
    # allow all of the functions to use this role to access dynamodb
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.CUSTOMERS_TABLE}'


Resources:
  CustomerApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Customer Api Gateway
      StageName: Staging

  GetCustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/customers/get.handler
      Runtime: nodejs8.10
      Events:
        HelloWorldApi:
          Type: Api
          Properties:
            RestApiId: !Ref CustomerApiGateway
            Path: /customer/{dni}
            Method: GET
            Cors: true
  # define the dynamodb table to be created
  ContactsDynamoDbTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        -
          AttributeName: dni
          AttributeType: S
        -
          AttributeName: typeDoc
          AttributeType: S
      KeySchema:
        -
          AttributeName: dni
          KeyType: HASH
        -
          AttributeName: typeDoc
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: ${self:provider.environment.CUSTOMERS_TABLE}

package:
  # excludes are added first
  exclude:
    - seed/**
    - coverage/**
    - .vscode/**
    - .dockerignore
    - .editorconfig
    - .env
    - .gitignore
    - Dockerfile
    - README.MD
    - '*.{ts,js,json,yml}' # the rest of the configs

  include:
    - src/**
    # exclude the tests and yml files from src
    - '!src/**/*.spec.js'
    - '!src/**/*.template.yaml'


functions:
  - '${file(src/handlers/customers/customers.serverless.yml)}'
  

plugins:
  - serverless-offline

custom:
  # vars
  customersTable: 'customers'

  # plugins
  serverless-offline:
    host: 0.0.0.0 # for docker container hosting